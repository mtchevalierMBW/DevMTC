/**
* TransitWorks (c) - 2018
*
* batchTransitWorksJournalPost
* Tested by: batchTransitWorksJournalPostTest
* Date: 5/27/2018
* Programmer: Alexander Miller
*
* Description: Automatic posting code for TransitWorks Journals generated by RootStock.
* 				Manual Journals SHOULD be ignored in this process.
*
* Code to run hourly at the next possible hour from submission: System.schedule('batchTransitWorksJournalPost Hourly', '0 0 * * * ?', new batchTransitWorksJournalPost() );
*/
global class batchTransitWorksJournalPost implements Database.Batchable<sObject>, Schedulable{

    public batchTransitWorksJournalPost(){}

    global void execute(SchedulableContext SC) 
    {
        batchTransitWorksJournalPost thisBatch = new batchTransitWorksJournalPost();
        database.executeBatch(thisBatch, 1); 
    }

    global Database.QueryLocator start(Database.BatchableContext BC) 
    {  
        TransitForceSettings__c tempSettings = TransitForceSettings__c.getInstance();
        
        System.debug(tempSettings);

        String acceptedSourcesAndDescriptions = generateAcceptedSources(tempSettings.Journal_Accept_Document_Sources__c);

        String query = 'SELECT Id ' +
                        'FROM c2g__codaJournal__c ' +
                        'WHERE c2g__OwnerCompany__r.c2g__ExternalId__c = \'TWK\' AND ' +                     // TransitWorks Only
                        'c2g__JournalStatus__c = \'In Progress\' AND ' +                                // Only Journals in In Progess. This is default for RootStock
                        '(Source__c IN (' + acceptedSourcesAndDescriptions + ') OR ' +                  // Custom Setting TransitForceSettings__c declared values for acceptable journal sources
                        'c2g__JournalDescription__c IN (' + acceptedSourcesAndDescriptions + ') )';     // Custom Setting TransitForceSettings__c declared values for acceptable journal descriptions

        System.debug(query);

        return Database.getQueryLocator(query);
    }

    global void execute(Database.BatchableContext BC, List<sObject> listTemp) 
    {    
        // Commit posting
        FFAccounting.postJournal( listTemp.get(0).Id );   
    }   
     
    global void finish(Database.BatchableContext BC) {}

    /**
    * generateAcceptedSources 
    *
    * Function which takes the accepted sources/descriptions
    * and pieces them into a SOQL list for the start method
    *
    * @param customSettingList - comma separated accepted sources and journal descriptions for SOQL conversion
    *
    * @return String - string looking like " 'id1', 'id2' "
    */
    public String generateAcceptedSources(String customSettingList)
    {
        String newStr = '';
        String[] myList = new List<String>();
        myList = customSettingList.split(',');

        for(String str : myList)
        {
            newStr += '\'' + str.trim() + '\',';
            newStr = newStr.lastIndexOf(',') > 0 ? newStr.substring(0,newStr.lastIndexOf(',')) + ',' : newStr ;
        }

        newStr = newStr.Substring(0,newStr.length()-1); 

        return newStr;
    }   
}